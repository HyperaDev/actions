#
# This file is a part of HyperaDev/actions, licensed under the MIT License.
#
# Copyright (c) 2021-2024 Joshua Sing <joshua@hypera.dev>
# Copyright (c) 2021-2023 LooFifteen <luis@lu15.dev>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# GitHub Actions workflow to build a Gradle project.
name: "Gradle"
on:
  workflow_call:
    inputs:
      java_version:
        description: "JDK version to be used when building"
        default: "21" # Use latest JDK LTS.
        type: string
        required: false
      gradle_extra_args:
        description: "Extra arguments to execute Gradle with"
        default: ""
        type: string
        required: false
      gradle_warning_mode:
        description: "Gradle warning mode"
        default: "fail" # Fail on warnings
        type: string
        required: false
      codecov_enabled:
        description: "Whether test coverage should be uploaded to Codecov"
        default: false
        type: boolean
        required: false
      codecov_files:
        description: "Comma-separated paths to the coverage report(s)"
        default: ""
        type: string
        required: false
      codecov_directory:
        description: "Directory to search for coverage reports in"
        default: ""
        type: string
        required: false
      upload_artifacts:
        description: "Artifacts to upload after building"
        default: ""
        type: string
        required: false
    secrets:
      CODECOV_TOKEN:
        description: "Codecov repository upload token"
        required: false

permissions:
  contents: read

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          fetch-depth: 0
          submodules: true

      - name: "Validate Gradle wrapper"
        uses: gradle/actions/wrapper-validation@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2

      - name: "Setup JDK ${{ inputs.java_version }}"
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: "${{ inputs.java_version }}"
          distribution: "temurin"

      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2
        with:
          gradle-version: "wrapper"

      - name: "Prepare for build"
        env:
          WARNING_MODE: "${{ inputs.gradle_warning_mode }}"
        run: |
          # Write Gradle warning mode to user home
          mkdir -p $HOME/.gradle/
          echo "org.gradle.warning.mode=$WARNING_MODE" >> $HOME/.gradle/gradle.properties

      - name: "Build"
        run: ./gradlew ${{ inputs.gradle_extra_args }} build

      - name: "Archive test reports"
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: "${{ runner.os }}-test-reports"
          if-no-files-found: ignore
          path: |
            **/build/reports/

      - name: "Upload coverage to Codecov"
        if: always() && inputs.codecov_enabled
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        with:
          files: "${{ inputs.codecov_files }}"
          directory: "${{ inputs.codecov_directory }}"
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

      - name: "Upload artifacts"
        if: inputs.upload_artifacts != ''
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          if-no-files-found: ignore
          path: "${{ inputs.upload_artifacts }}"
